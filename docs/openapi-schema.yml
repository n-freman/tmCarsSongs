openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/songs/:
    get:
      operationId: listSongs
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Song'
          description: ''
      tags:
      - api
  /api/songs/{id}/:
    get:
      operationId: retrieveSong
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this song.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
      tags:
      - api
  /api/singer/:
    get:
      operationId: listSingers
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Singer'
          description: ''
      tags:
      - api
    post:
      operationId: createSinger
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Singer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Singer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Singer'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
      tags:
      - api
  /api/singer/{id}/:
    get:
      operationId: retrieveSinger
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this singer.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
      tags:
      - api
    put:
      operationId: updateSinger
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this singer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Singer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Singer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Singer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSinger
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this singer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Singer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Singer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Singer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySinger
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this singer.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    Song:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 120
        image:
          type: string
          format: binary
          nullable: true
        genre:
          type: string
          maxLength: 120
        singer:
          type: integer
      required:
      - title
      - genre
      - singer
    Singer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          maxLength: 120
        image:
          type: string
          format: binary
          nullable: true
        songs_count:
          type: string
          readOnly: true
      required:
      - full_name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
